import User from '../classes/User';

/*

Exploit description

1. Hacker creates account with victim's email address
2. Victim logs in with oauth
3. Account becomes verified, hacker has password

Solution

If OAuth is used by an unverified_email account, account becomes verified
but password resets and sessions are deleted

*/
export default async function oauth_exploit_check(user: User, oauth_key, oauth_token) {
   // If user's oauth service is not set, it means we got to
   // this user by their email
   if(user.get(oauth_key) !== oauth_token) {

      // Set correctly
      user.set(oauth_key, oauth_token);

      // If user's email is unverified, exploit might happen
      if(!user.get('email_verified')) {

         user.set('password', null);
         user.set('sessions', {});

      }

      await user.updateRecord();

   }

};
